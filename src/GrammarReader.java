import java.io.*;import java.util.*;import java.lang.*;public class GrammarReader {	private Map<String, List<String>> mapVariableProduction = new LinkedHashMap<>();	private int lineCount;	private String input;	public GrammarReader() {	}	public GrammarReader(int lineCount) {		this.lineCount = lineCount;	}	public Map<String, List<String>> getMapVariableProduction() {		return mapVariableProduction;	}	public void setMapVariableProduction(Map<String, List<String>> mapVariableProduction) {		this.mapVariableProduction = mapVariableProduction;	}	public int getLineCount() {		return lineCount;	}	public void setLineCount(int lineCount) {		this.lineCount = lineCount;	}	public String getInput() {		return input;	}	public void setInput(String input) {		this.input = input;	}	public Map<String, List<String>> readFromFile(String path) throws IOException {		String s = "";		File toRead = new File(path);		BufferedReader configuredReader;				if (!toRead.exists() || toRead.isDirectory()) {			throw new IOException("The indicated input file path either doesn't exist, or points to a directory. Check the "					+ "path and try again.");		}		else {			int counter = 0;			configuredReader = new BufferedReader(new FileReader(toRead));			String line = configuredReader.readLine();					while (line != null) {						s = s.concat(line + "\n");						line = configuredReader.readLine();						counter++;					}			setLineCount(counter);			setInput(s);			convertStringtoMap();		}		return getMapVariableProduction();	}	private void convertStringtoMap() {		String[] splitedEnterInput = splitEnter(getInput());		for (int i = 0; i < splitedEnterInput.length; i++) {			String[] tempString = splitedEnterInput[i].split("->|\\|");			String variable = tempString[0].trim();			String[] production = Arrays.copyOfRange(tempString, 1, tempString.length);			List<String> productionList = new ArrayList<String>();			for (int k = 0; k < production.length; k++) {				production[k] = production[k].trim();			}			for (int j = 0; j < production.length; j++) {				productionList.add(production[j]);			}			getMapVariableProduction().put(variable, productionList);		}	}	private String[] splitEnter(String input) {		String[] tmpArray = new String[lineCount];		for (int i = 0; i < lineCount; i++) {			tmpArray = input.split("\\n");		}		return tmpArray;	}}